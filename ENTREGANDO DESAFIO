class RecintosZoo {

    analisaRecintos(animal, quantidade) {
    }
class RecintosZoo {

    constructor() {
        this.recintos = [
            { numero: 1, bioma: 'savana', tamanho: 10, animais: [{ especie: 'MACACO', quantidade: 3 }] },
            { numero: 2, bioma: 'floresta', tamanho: 5, animais: [] },
            { numero: 3, bioma: 'savana e rio', tamanho: 7, animais: [{ especie: 'GAZELA', quantidade: 1 }] },
            { numero: 4, bioma: 'rio', tamanho: 8, animais: [] },
            { numero: 5, bioma: 'savana', tamanho: 9, animais: [{ especie: 'LEAO', quantidade: 1 }] },
        ];

        this.animais = {
            LEAO: { tamanho: 3, biomas: ['savana'], carnivoro: true },
            LEOPARDO: { tamanho: 2, biomas: ['savana'], carnivoro: true },
            CROCODILO: { tamanho: 3, biomas: ['rio'], carnivoro: true },
            MACACO: { tamanho: 1, biomas: ['savana', 'floresta'], carnivoro: false },
            GAZELA: { tamanho: 2, biomas: ['savana'], carnivoro: false },
            HIPOPOTAMO: { tamanho: 4, biomas: ['savana', 'rio'], carnivoro: false },
        };
    }

    analisaRecintos(tipoAnimal, quantidade) {
        // Validação de entrada
        if (!this.animais[tipoAnimal]) {
            return { erro: "Animal inválido" };
        }
        if (quantidade <= 0 || !Number.isInteger(quantidade)) {
            return { erro: "Quantidade inválida" };
        }

        const { tamanho, biomas, carnivoro } = this.animais[tipoAnimal];
        const espaçoNecessário = tamanho * quantidade + (quantidade > 1 ? 1 : 0);

        const recintosViaveis = this.recintos.filter(recinto => {
            // Bioma adequado
            if (!biomas.includes(recinto.bioma) && !(recinto.bioma.includes('savana') && recinto.bioma.includes('rio') && tipoAnimal === 'HIPOPOTAMO')) {
                return false;
            }

            // Espaço suficiente
            const espaçoOcupado = recinto.animais.reduce((total, { especie, quantidade }) =>
                total + this.animais[especie].tamanho * quantidade + (recinto.animais.length > 1 ? 1 : 0), 0);
            const espaçoLivre = recinto.tamanho - espaçoOcupado;

            if (espaçoLivre < espaçoNecessário) {
                return false;
            }

            // Carnívoros somente com a própria espécie
            if (carnivoro && recinto.animais.length > 0 && recinto.animais.some(a => a.especie !== tipoAnimal)) {
                return false;
            }

            // Animais existentes devem continuar confortáveis
            if (recinto.animais.some(a => this.animais[a.especie].carnivoro && a.especie !== tipoAnimal)) {
                return false;
            }

            // Hipopótamos só toleram outras espécies em savana e rio
            if (tipoAnimal === 'HIPOPOTAMO' && recinto.bioma !== 'savana e rio' && recinto.animais.length > 0) {
                return false;
            }

            // Macacos precisam de companhia
            if (tipoAnimal === 'MACACO' && quantidade === 1 && recinto.animais.length === 0) {
                return false;
            }

            return true;
        }).map(recinto => {
            const espaçoOcupado = recinto.animais.reduce((total, { especie, quantidade }) =>
                total + this.animais[especie].tamanho * quantidade + (recinto.animais.length > 1 ? 1 : 0), 0);
            const espaçoLivre = recinto.tamanho - espaçoOcupado - espaçoNecessário;
            return `Recinto ${recinto.numero} (espaço livre: ${espaçoLivre} total: ${recinto.tamanho})`;
        }).sort((a, b) => a.numero - b.numero);

        if (recintosViaveis.length === 0) {
            return { erro: "Não há recinto viável" };
        }

        return { recintosViaveis };
    }
}

export { RecintosZoo as RecintosZoo };
}

